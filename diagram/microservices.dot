// cat microservices.dot | docker container run --rm -i vladgolubev/dot2png > microservices.png

digraph architecture {
  rankdir=LR;
  
  // cloud services - #A233FF (purple)
  node[fillcolor="#A233FF" style="filled" fontcolor="white"];
  config[label="config"]; 
  registry[label="registry"];
  
  // utility services - #303F9F (dark blue)
  node[fillcolor="#303F9F" style="filled" fontcolor="white"];
  database[label="DB"]; 
  cache[label="cache"];
  logging[label="logging"];

  // client-side Apps - #FFCCBC (light orange)
  node[fillcolor="#FFCCBC" style="filled" fontcolor="black"];
  ui[label="UI"];

  // api gate way - #FFE333 (dark yellow)
  node[fillcolor="#FFE333" style="filled" fontcolor="black"];
  api_gateway[label="api_gateway"]

  // microservices - #C8E6C9 (light green)
  node[fillcolor="#C8E6C9" style="filled" fontcolor="black"];
  file_service[label="file_service"]; 
  ip_service[label="ip_service"]; 
  reports_service[label="reports_service"];

  subgraph client_side_apps {
      ui -> {api_gateway};
      {rank=same; ui};
  }
  
  subgraph api_gateways {
      api_gateway -> {logging} [arrowhead=obox];
      api_gateway -> {config, registry, file_service, ip_service, reports_service};
  }
  
  subgraph microservices {
      file_service -> {reports_service, logging} [arrowhead=obox];
      file_service -> {config, registry, cache};
      ip_service -> {reports_service, logging} [arrowhead=obox];
      ip_service -> {config, registry, cache};
      reports_service -> logging [arrowhead=obox];
      reports_service -> {config, registry, database};
  }
}
